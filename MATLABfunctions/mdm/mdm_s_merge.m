function s_new = mdm_s_merge(s, nii_path, nii_name, opt)% function s_new = mdm_s_merge(s, nii_path, nii_name, opt)%% s is a cell arrayif (nargin < 4), opt = []; endopt = mdm_opt(opt);msf_log(['Starting ' mfilename], opt);% test nii_name[~,~,ext] = fileparts(nii_name);if (numel(ext) ~= 0) && (opt.assert_input_args)    error('argument nii_name should not contain file extensions');end       % build new filenames_new.nii_fn = fullfile(nii_path, [nii_name opt.nii_ext]);% subsample nii only if neededif (exist(s_new.nii_fn, 'file') && exist(mdm_xps_fn_from_nii_fn(s_new.nii_fn), 'file') ...        && ~opt.do_overwrite)    disp(['Skipping, output file already exists: ' s_new.nii_fn]);     s_new.xps = mdm_xps_load(mdm_xps_fn_from_nii_fn(s_new.nii_fn));    return;endnii_fn = cell(1, numel(s));for c = 1:numel(s)    nii_fn{c} = s{c}.nii_fn;endmdm_nii_merge(nii_fn, s_new.nii_fn, opt);% merge the xpsxps = cell(1, numel(s));for c = 1:numel(s)    xps{c} = s{c}.xps;ends_new.xps = mdm_xps_merge(xps);mdm_xps_save(s_new.xps, mdm_xps_fn_from_nii_fn(s_new.nii_fn), opt);
function mdm_bruker_grad_write(gwf, fn, gwf_title, gwf_origin, gwf_owner)% function g = mdm_bruker_grad_write(fn)%if (nargin < 4), gwf_origin = 'unknown'; endif (nargin < 5), gwf_owner = 'nmrsu'; endfid = fopen(fn,'w');try        fprintf(fid, '##TITLE= %s\n', gwf_title); %  e.g. gc1    fprintf(fid, '##JCAMP-DX= 5.00 Bruker JCAMP library\n');    fprintf(fid, '##DATA TYPE= Shape Data\n');    fprintf(fid, '##ORIGIN= %s\n', gwf_origin);    fprintf(fid, '##OWNER= <%s>\n', gwf_owner);    fprintf(fid, '##DATE= xx\n');    fprintf(fid, '##TIME= xx\n');    fprintf(fid, '##MINX= 0\n');    fprintf(fid, '##MAXX= 1\n');    fprintf(fid, '##MINY= 0\n');    fprintf(fid, '##MAXY= 1\n');    fprintf(fid, '##$SHAPE_EXMODE= gradient\n');    fprintf(fid, '##$SHAPE_TOTROT= 0\n');    fprintf(fid, '##$SHAPE_BWFAC= 0\n');    fprintf(fid, '##$SHAPE_INTEGFAC= 0\n');    fprintf(fid, '##$SHAPE_MODE= 0\n');    fprintf(fid, '##NPOINTS=%i\n', numel(gwf));    fprintf(fid, '##XYDATA= (X++(Y..Y))\n');        for c = 1:numel(gwf)        fprintf(fid, '%1.5f\n', gwf(c));    end        fprintf(fid, '##END\n');    catch me    disp(me.message);endfclose(fid);